{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { estilos } from \"./estilos\";\nimport { useState, useContext } from 'react';\nimport { TemaContext } from \"../../contexts/TemaContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Configuracao(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(TemaContext),\n      temaAtual = _useContext.temaAtual,\n      setTemaAtual = _useContext.setTemaAtual,\n      temaEscolhido = _useContext.temaEscolhido;\n\n  var estilo = estilos(temaEscolhido);\n  return _jsxs(View, {\n    style: estilo.container,\n    children: [_jsx(Text, {\n      style: estilo.titulo,\n      children: \"Configura\\xE7\\xE3o\"\n    }), _jsxs(View, {\n      style: estilo.inputArea,\n      children: [_jsxs(Text, {\n        style: estilo.subtitulo,\n        children: [\"Tema: \", temaAtual]\n      }), _jsx(Switch, {\n        onValueChange: function onValueChange() {\n          return temaAtual === 'escuro' ? setTemaAtual('claro') : setTemaAtual('escuro');\n        },\n        value: temaAtual === 'escuro' ? true : false\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["estilos","useState","useContext","TemaContext","Configuracao","navigation","temaAtual","setTemaAtual","temaEscolhido","estilo","container","titulo","inputArea","subtitulo"],"sources":["C:/Users/mateu/Desktop/wiser/Projetos Pessoais/react-native-context-api-projeto-base/src/telas/Configuracao/index.js"],"sourcesContent":["import { Text, View, Switch } from 'react-native';\nimport { estilos } from './estilos';\nimport { useState, useContext } from 'react';\nimport { TemaContext } from '../../contexts/TemaContext';\n\nexport default function Configuracao({ navigation }) {\n  const { temaAtual, setTemaAtual, temaEscolhido } = useContext(TemaContext)\n\n  const estilo = estilos(temaEscolhido)\n\n  return (\n    <View style={estilo.container}>\n      <Text style={estilo.titulo}>Configuração</Text>\n\n      <View style={estilo.inputArea}>\n      <Text style={estilo.subtitulo}>Tema: {temaAtual}</Text>\n      <Switch\n        onValueChange={() => \n          temaAtual === 'escuro' ?\n          setTemaAtual('claro') :\n          setTemaAtual('escuro')\n      }\n        value={temaAtual === 'escuro' ? true : false}\n      />\n      </View>\n    </View>\n  );\n}\n\n"],"mappings":";;;AACA,SAASA,OAAT;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,WAAT;;;AAEA,eAAe,SAASC,YAAT,OAAsC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EACnD,kBAAmDH,UAAU,CAACC,WAAD,CAA7D;EAAA,IAAQG,SAAR,eAAQA,SAAR;EAAA,IAAmBC,YAAnB,eAAmBA,YAAnB;EAAA,IAAiCC,aAAjC,eAAiCA,aAAjC;;EAEA,IAAMC,MAAM,GAAGT,OAAO,CAACQ,aAAD,CAAtB;EAEA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,MAApB;MAAA;IAAA,EADF,EAGE,MAAC,IAAD;MAAM,KAAK,EAAEF,MAAM,CAACG,SAApB;MAAA,WACA,MAAC,IAAD;QAAM,KAAK,EAAEH,MAAM,CAACI,SAApB;QAAA,qBAAsCP,SAAtC;MAAA,EADA,EAEA,KAAC,MAAD;QACE,aAAa,EAAE;UAAA,OACbA,SAAS,KAAK,QAAd,GACAC,YAAY,CAAC,OAAD,CADZ,GAEAA,YAAY,CAAC,QAAD,CAHC;QAAA,CADjB;QAME,KAAK,EAAED,SAAS,KAAK,QAAd,GAAyB,IAAzB,GAAgC;MANzC,EAFA;IAAA,EAHF;EAAA,EADF;AAiBD"},"metadata":{},"sourceType":"module"}